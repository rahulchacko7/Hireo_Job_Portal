definitions:
  models.ChatRequest:
    properties:
      friendID:
        type: string
      limit:
        type: string
      offset:
        type: string
    required:
    - friendID
    - limit
    - offset
    type: object
  models.EmployerDetails:
    properties:
      about_company:
        type: string
      company_name:
        type: string
      company_size:
        type: integer
      contact_email:
        type: string
      contact_phone_number:
        type: integer
      headquarters_address:
        type: string
      industry:
        type: string
      password:
        type: string
      website:
        type: string
    type: object
  models.EmployerLogin:
    properties:
      email:
        type: string
      password:
        maxLength: 20
        minLength: 6
        type: string
    required:
    - email
    - password
    type: object
  models.EmployerSignUp:
    properties:
      about_company:
        type: string
      company_name:
        type: string
      company_size:
        type: integer
      contact_email:
        type: string
      contact_phone_number:
        type: integer
      headquarters_address:
        type: string
      industry:
        type: string
      password:
        type: string
      website:
        type: string
    type: object
  models.JobOpening:
    properties:
      application_deadline:
        type: string
      description:
        type: string
      education_level:
        type: string
      employment_type:
        type: string
      experience_level:
        type: string
      id:
        type: integer
      location:
        type: string
      requirements:
        type: string
      salary:
        type: string
      skills_required:
        type: string
      title:
        type: string
    type: object
  models.JobSeekerLogin:
    properties:
      email:
        type: string
      password:
        maxLength: 20
        minLength: 6
        type: string
    required:
    - email
    - password
    type: object
  models.JobSeekerSignUp:
    properties:
      address:
        type: string
      bio:
        type: string
      date_of_birth:
        type: string
      email:
        type: string
      first_name:
        type: string
      gender:
        type: string
      last_name:
        type: string
      password:
        maxLength: 20
        minLength: 6
        type: string
      phone_number:
        type: string
    required:
    - email
    - password
    type: object
  response.Response:
    properties:
      data: {}
      error: {}
      message:
        type: string
      status_code:
        type: integer
    type: object
info:
  contact:
    name: API Support
  description: Hire_Jobs is a platform to find your dream job.
  title: Hireo Jobs API
  version: "1.0"
paths:
  /employer/all-job-postings:
    get:
      consumes:
      - application/json
      description: Retrieve all job openings for the authenticated employer
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Jobs retrieved successfully
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Invalid employer ID type
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Failed to fetch jobs
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - BearerTokenAuth: []
      summary: Get all jobs
      tags:
      - Job Management
  /employer/chats:
    post:
      consumes:
      - application/json
      description: Retrieves chat details based on the provided request
      parameters:
      - description: Chat request details
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.ChatRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved chat details
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Details not in correct format" or "User ID not found in JWT
            claims" or "Failed to get chat details
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: Retrieve chat details
      tags:
      - Chat
  /employer/company:
    get:
      consumes:
      - application/json
      description: Retrieve details of the company deails with the authenticated employer
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Company details retrieved successfully
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Invalid employer ID type
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Failed to fetch company details
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - BearerTokenAuth: []
      summary: Fetch company details
      tags:
      - Employers
    put:
      consumes:
      - application/json
      description: Update details of the company associated with the authenticated
        employer
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Employer details to update
        in: body
        name: employerDetails
        required: true
        schema:
          $ref: '#/definitions/models.EmployerDetails'
      produces:
      - application/json
      responses:
        "200":
          description: Company updated successfully
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Invalid employer ID type
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Failed to update company
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - BearerTokenAuth: []
      summary: Update company details
      tags:
      - Employers
  /employer/get-applicants:
    get:
      description: Retrieve the list of applicants for the jobs posted by the employer
      parameters:
      - description: Employer ID
        in: header
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Applicants retrieved successfully
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Invalid employer ID type
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Failed to fetch applicants
          schema:
            $ref: '#/definitions/response.Response'
      summary: Get applicants for a job
      tags:
      - Employers
  /employer/interviews:
    get:
      consumes:
      - application/json
      description: Get interviews for a specific job by an employer
      parameters:
      - description: User ID
        in: header
        name: id
        required: true
        type: string
      - description: Job ID
        in: query
        name: job_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Interview details fetched successfully
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Invalid or missing user ID" or "Invalid job ID
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Failed to fetch interview details
          schema:
            $ref: '#/definitions/response.Response'
      summary: Get interviews
      tags:
      - Employers
  /employer/job-post:
    post:
      consumes:
      - application/json
      description: Create a new job opening for the authenticated employer
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Employer ID
        in: header
        name: employerID
        required: true
        type: integer
      - description: Job opening details
        in: body
        name: jobOpening
        required: true
        schema:
          $ref: '#/definitions/models.JobOpening'
      produces:
      - application/json
      responses:
        "201":
          description: Job opening created successfully
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Invalid employer ID type
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Failed to create job opening
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - BearerTokenAuth: []
      summary: Post a job opening
      tags:
      - Job Management
  /employer/job-postings:
    delete:
      consumes:
      - application/json
      description: Delete a specific job opening for the authenticated employer
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Job ID
        in: query
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Job Deleted successfully
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Invalid job ID
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Failed to delete job
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - BearerTokenAuth: []
      summary: Delete a job
      tags:
      - Job Management
    get:
      consumes:
      - application/json
      description: Retrieve a specific job opening for the authenticated employer
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Job ID
        in: query
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Jobs retrieved successfully
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Invalid job ID
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Failed to fetch jobs
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - BearerTokenAuth: []
      summary: Get a job
      tags:
      - Job Management
    put:
      consumes:
      - application/json
      description: Update a specific job opening for the authenticated employer
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Job ID
        in: query
        name: id
        required: true
        type: integer
      - description: Job details
        in: body
        name: job
        required: true
        schema:
          $ref: '#/definitions/models.JobOpening'
      produces:
      - application/json
      responses:
        "200":
          description: Job updated successfully
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Details not in correct format
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Failed to update job
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - BearerTokenAuth: []
      summary: Update a job
      tags:
      - Job Management
  /employer/login:
    post:
      consumes:
      - application/json
      description: Process the employer login request
      parameters:
      - description: Employer Login details
        in: body
        name: employer
        required: true
        schema:
          $ref: '#/definitions/models.EmployerLogin'
      produces:
      - application/json
      responses:
        "200":
          description: Employer authenticated successfully
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Details not in correct format
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Cannot authenticate employer
          schema:
            $ref: '#/definitions/response.Response'
      summary: Login for employer
      tags:
      - Employers Authentication
  /employer/schedule-interview:
    post:
      consumes:
      - application/json
      description: Schedule an interview for a jobseeker by an employer
      parameters:
      - description: User ID
        in: header
        name: id
        required: true
        type: string
      - description: Job ID
        in: query
        name: job_id
        required: true
        type: string
      - description: Jobseeker ID
        in: query
        name: jobseeker_id
        required: true
        type: string
      - description: Interview Date
        format: YYYY-MM-DD
        in: query
        name: interview_date
        required: true
        type: string
      - description: Interview Time
        format: HH:MM
        in: query
        name: interview_time
        required: true
        type: string
      - description: Interview Type
        enum:
        - ONLINE
        - OFFLINE
        in: query
        name: interview_type
        required: true
        type: string
      - description: Interview Link
        in: query
        name: link
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Interview scheduled successfully
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Invalid or missing user ID" or "Invalid job ID" or "Invalid
            jobseeker ID" or "Invalid interview date" or "Invalid interview time"
            or "Invalid interview type
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Failed to schedule interview
          schema:
            $ref: '#/definitions/response.Response'
      summary: Schedule an interview
      tags:
      - Employers
  /employer/signup:
    post:
      consumes:
      - application/json
      description: Process the employer signup request
      parameters:
      - description: Employer SignUp details
        in: body
        name: employer
        required: true
        schema:
          $ref: '#/definitions/models.EmployerSignUp'
      produces:
      - application/json
      responses:
        "200":
          description: Employer created successfully
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Details not in correct format
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Cannot create employer
          schema:
            $ref: '#/definitions/response.Response'
      summary: Sign up a new employer
      tags:
      - Employers Authentication
  /group/:groupID/chat:
    get:
      consumes:
      - application/json
      description: Processes WebSocket messages for group chat based on the provided
        group ID
      parameters:
      - description: Group ID
        in: path
        name: groupID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: WebSocket connection established
          schema:
            type: string
        "400":
          description: Missing Authorization header" or "Invalid token" or "Websocket
            Connection Issue" or "Error reading WebSocket message" or "Details not
            in correct format
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: Process WebSocket group chat messages
      tags:
      - Chat
  /job-seeker/apply-job:
    post:
      consumes:
      - multipart/form-data
      description: Submit a job application with a resume and cover letter
      parameters:
      - description: Employer ID
        in: header
        name: id
        required: true
        type: string
      - description: Job ID
        in: formData
        name: job_id
        required: true
        type: string
      - description: Cover Letter
        in: formData
        name: cover_letter
        required: true
        type: string
      - description: Resume File
        in: formData
        name: resume
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: Job applied successfully
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Invalid employer ID type or error in getting resume file
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Failed to save/read resume file or apply for job
          schema:
            $ref: '#/definitions/response.Response'
      summary: Apply for a job
      tags:
      - Job Seeker
  /job-seeker/apply-saved-job:
    post:
      consumes:
      - multipart/form-data
      description: Apply to a job that has been saved by the user
      parameters:
      - description: User ID
        in: header
        name: id
        required: true
        type: string
      - description: Job ID
        in: formData
        name: job_id
        required: true
        type: string
      - description: Cover Letter
        in: formData
        name: cover_letter
        type: string
      - description: Resume File
        in: formData
        name: resume
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: Job applied successfully
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Invalid or missing user ID" or "Invalid job ID" or "Error in
            getting resume file
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: No such saved job found
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Failed to check saved jobs" or "Failed to save resume file"
            or "Failed to read resume file" or "Failed to apply for job
          schema:
            $ref: '#/definitions/response.Response'
      summary: Apply to a saved job
      tags:
      - Job Seeker
  /job-seeker/jobs:
    get:
      consumes:
      - application/json
      description: Retrieve the details of a specific job using its ID
      parameters:
      - description: Job ID
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Job details retrieved successfully
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Invalid job ID
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Failed to fetch job details
          schema:
            $ref: '#/definitions/response.Response'
      summary: Get job details
      tags:
      - Job Seeker
  /job-seeker/save-jobs:
    post:
      description: Save a job to the user's list of saved jobs
      parameters:
      - description: Job ID
        in: query
        name: job_id
        required: true
        type: string
      - description: User ID
        in: header
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Job saved successfully
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Invalid or missing job ID" or "User ID not found" or "Invalid
            user ID type
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Failed to save job
          schema:
            $ref: '#/definitions/response.Response'
      summary: Save a job
      tags:
      - Job Seeker
  /job-seeker/saved-jobs:
    delete:
      description: Delete a job from the user's list of saved jobs
      parameters:
      - description: Job ID
        in: query
        name: job_id
        required: true
        type: string
      - description: User ID
        in: header
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Job deleted successfully
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Invalid job ID format" or "Invalid or missing user ID" or "Invalid
            user ID type
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Failed to delete job
          schema:
            $ref: '#/definitions/response.Response'
      summary: Delete a saved job
      tags:
      - Job Seeker
    get:
      description: Retrieve a job that has been saved by the user
      parameters:
      - description: User ID
        in: header
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Job fetched successfully
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: User ID not found" or "Invalid user ID type
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Failed to get job
          schema:
            $ref: '#/definitions/response.Response'
      summary: Get a saved job
      tags:
      - Job Seeker
  /job-seeker/view-jobs:
    get:
      consumes:
      - application/json
      description: Retrieve all job openings based on a keyword search for job seekers
      parameters:
      - description: Search keyword
        in: query
        name: Keyword
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Jobs retrieved successfully
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Keyword parameter is required
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Failed to fetch jobs
          schema:
            $ref: '#/definitions/response.Response'
      summary: View all jobs
      tags:
      - Job Seeker
  /jobseeker/login:
    post:
      consumes:
      - application/json
      description: Authenticate job seeker
      parameters:
      - description: Job seeker credentials
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.JobSeekerLogin'
      produces:
      - application/json
      responses:
        "200":
          description: Job seeker authenticated successfully
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Details not in correct format
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Cannot authenticate job seeker
          schema:
            $ref: '#/definitions/response.Response'
      summary: Job seeker login
      tags:
      - Job Seekers Authentication
  /jobseeker/signup:
    post:
      consumes:
      - application/json
      description: Create a new job seeker account
      parameters:
      - description: Job seeker details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.JobSeekerSignUp'
      produces:
      - application/json
      responses:
        "200":
          description: Job seeker created successfully
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Details not in correct format
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Cannot create job seeker
          schema:
            $ref: '#/definitions/response.Response'
      summary: Job seeker sign up
      tags:
      - Job Seekers Authentication
securityDefinitions:
  BearerTokenAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
